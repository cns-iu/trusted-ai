/*! For license information please see occupations-search-area-occupations-search-area-component-stories.6ef13334.iframe.bundle.js.LICENSE.txt */
(self.webpackChunktrust_ai=self.webpackChunktrust_ai||[]).push([[657],{"./src/app/occupations-search-area/occupations-search-area.component.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Primary:()=>Primary,default:()=>occupations_search_area_component_stories});var tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.js");var occupations_search_area_componentngResource=__webpack_require__("./src/app/occupations-search-area/occupations-search-area.component.scss?ngResource"),occupations_search_area_componentngResource_default=__webpack_require__.n(occupations_search_area_componentngResource),common=__webpack_require__("./node_modules/@angular/common/fesm2020/common.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2020/core.mjs"),fesm2020_forms=__webpack_require__("./node_modules/@angular/forms/fesm2020/forms.mjs"),fesm2020_button=__webpack_require__("./node_modules/@angular/material/fesm2020/button.mjs"),a11y=__webpack_require__("./node_modules/@angular/cdk/fesm2020/a11y.mjs"),coercion=__webpack_require__("./node_modules/@angular/cdk/fesm2020/coercion.mjs"),collections=__webpack_require__("./node_modules/@angular/cdk/fesm2020/collections.mjs"),fesm2020_core=__webpack_require__("./node_modules/@angular/material/fesm2020/core.mjs");const _c0=["button"],MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS=new core.InjectionToken("MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS"),MAT_BUTTON_TOGGLE_GROUP=new core.InjectionToken("MatButtonToggleGroup"),MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR={provide:fesm2020_forms.JU,useExisting:(0,core.forwardRef)((()=>MatButtonToggleGroup)),multi:!0};let uniqueIdCounter=0;class MatButtonToggleChange{constructor(source,value){this.source=source,this.value=value}}class MatButtonToggleGroup{get name(){return this._name}set name(value){this._name=value,this._markButtonsForCheck()}get vertical(){return this._vertical}set vertical(value){this._vertical=(0,coercion.Ig)(value)}get value(){const selected=this._selectionModel?this._selectionModel.selected:[];return this.multiple?selected.map((toggle=>toggle.value)):selected[0]?selected[0].value:void 0}set value(newValue){this._setSelectionByValue(newValue),this.valueChange.emit(this.value)}get selected(){const selected=this._selectionModel?this._selectionModel.selected:[];return this.multiple?selected:selected[0]||null}get multiple(){return this._multiple}set multiple(value){this._multiple=(0,coercion.Ig)(value),this._markButtonsForCheck()}get disabled(){return this._disabled}set disabled(value){this._disabled=(0,coercion.Ig)(value),this._markButtonsForCheck()}constructor(_changeDetector,defaultOptions){this._changeDetector=_changeDetector,this._vertical=!1,this._multiple=!1,this._disabled=!1,this._controlValueAccessorChangeFn=()=>{},this._onTouched=()=>{},this._name="mat-button-toggle-group-"+uniqueIdCounter++,this.valueChange=new core.EventEmitter,this.change=new core.EventEmitter,this.appearance=defaultOptions&&defaultOptions.appearance?defaultOptions.appearance:"standard"}ngOnInit(){this._selectionModel=new collections.Ov(this.multiple,void 0,!1)}ngAfterContentInit(){this._selectionModel.select(...this._buttonToggles.filter((toggle=>toggle.checked)))}writeValue(value){this.value=value,this._changeDetector.markForCheck()}registerOnChange(fn){this._controlValueAccessorChangeFn=fn}registerOnTouched(fn){this._onTouched=fn}setDisabledState(isDisabled){this.disabled=isDisabled}_emitChangeEvent(toggle){const event=new MatButtonToggleChange(toggle,this.value);this._controlValueAccessorChangeFn(event.value),this.change.emit(event)}_syncButtonToggle(toggle,select,isUserInput=!1,deferEvents=!1){this.multiple||!this.selected||toggle.checked||(this.selected.checked=!1),this._selectionModel?select?this._selectionModel.select(toggle):this._selectionModel.deselect(toggle):deferEvents=!0,deferEvents?Promise.resolve().then((()=>this._updateModelValue(toggle,isUserInput))):this._updateModelValue(toggle,isUserInput)}_isSelected(toggle){return this._selectionModel&&this._selectionModel.isSelected(toggle)}_isPrechecked(toggle){return void 0!==this._rawValue&&(this.multiple&&Array.isArray(this._rawValue)?this._rawValue.some((value=>null!=toggle.value&&value===toggle.value)):toggle.value===this._rawValue)}_setSelectionByValue(value){if(this._rawValue=value,this._buttonToggles)if(this.multiple&&value){if(!Array.isArray(value)&&("undefined"==typeof ngDevMode||ngDevMode))throw Error("Value must be an array in multiple-selection mode.");this._clearSelection(),value.forEach((currentValue=>this._selectValue(currentValue)))}else this._clearSelection(),this._selectValue(value)}_clearSelection(){this._selectionModel.clear(),this._buttonToggles.forEach((toggle=>toggle.checked=!1))}_selectValue(value){const correspondingOption=this._buttonToggles.find((toggle=>null!=toggle.value&&toggle.value===value));correspondingOption&&(correspondingOption.checked=!0,this._selectionModel.select(correspondingOption))}_updateModelValue(toggle,isUserInput){isUserInput&&this._emitChangeEvent(toggle),this.valueChange.emit(this.value)}_markButtonsForCheck(){this._buttonToggles?.forEach((toggle=>toggle._markForCheck()))}}MatButtonToggleGroup.ɵfac=function MatButtonToggleGroup_Factory(t){return new(t||MatButtonToggleGroup)(core["ɵɵdirectiveInject"](core.ChangeDetectorRef),core["ɵɵdirectiveInject"](MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,8))},MatButtonToggleGroup.ɵdir=core["ɵɵdefineDirective"]({type:MatButtonToggleGroup,selectors:[["mat-button-toggle-group"]],contentQueries:function MatButtonToggleGroup_ContentQueries(rf,ctx,dirIndex){if(1&rf&&core["ɵɵcontentQuery"](dirIndex,MatButtonToggle,5),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx._buttonToggles=_t)}},hostAttrs:["role","group",1,"mat-button-toggle-group"],hostVars:5,hostBindings:function MatButtonToggleGroup_HostBindings(rf,ctx){2&rf&&(core["ɵɵattribute"]("aria-disabled",ctx.disabled),core["ɵɵclassProp"]("mat-button-toggle-vertical",ctx.vertical)("mat-button-toggle-group-appearance-standard","standard"===ctx.appearance))},inputs:{appearance:"appearance",name:"name",vertical:"vertical",value:"value",multiple:"multiple",disabled:"disabled"},outputs:{valueChange:"valueChange",change:"change"},exportAs:["matButtonToggleGroup"],features:[core["ɵɵProvidersFeature"]([MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,{provide:MAT_BUTTON_TOGGLE_GROUP,useExisting:MatButtonToggleGroup}])]}),("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatButtonToggleGroup,[{type:core.Directive,args:[{selector:"mat-button-toggle-group",providers:[MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,{provide:MAT_BUTTON_TOGGLE_GROUP,useExisting:MatButtonToggleGroup}],host:{role:"group",class:"mat-button-toggle-group","[attr.aria-disabled]":"disabled","[class.mat-button-toggle-vertical]":"vertical","[class.mat-button-toggle-group-appearance-standard]":'appearance === "standard"'},exportAs:"matButtonToggleGroup"}]}],(function(){return[{type:core.ChangeDetectorRef},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]}]}]}),{_buttonToggles:[{type:core.ContentChildren,args:[(0,core.forwardRef)((()=>MatButtonToggle)),{descendants:!0}]}],appearance:[{type:core.Input}],name:[{type:core.Input}],vertical:[{type:core.Input}],value:[{type:core.Input}],valueChange:[{type:core.Output}],multiple:[{type:core.Input}],disabled:[{type:core.Input}],change:[{type:core.Output}]});const _MatButtonToggleBase=(0,fesm2020_core.Kr)(class{});class MatButtonToggle extends _MatButtonToggleBase{get buttonId(){return`${this.id}-button`}get appearance(){return this.buttonToggleGroup?this.buttonToggleGroup.appearance:this._appearance}set appearance(value){this._appearance=value}get checked(){return this.buttonToggleGroup?this.buttonToggleGroup._isSelected(this):this._checked}set checked(value){const newValue=(0,coercion.Ig)(value);newValue!==this._checked&&(this._checked=newValue,this.buttonToggleGroup&&this.buttonToggleGroup._syncButtonToggle(this,this._checked),this._changeDetectorRef.markForCheck())}get disabled(){return this._disabled||this.buttonToggleGroup&&this.buttonToggleGroup.disabled}set disabled(value){this._disabled=(0,coercion.Ig)(value)}constructor(toggleGroup,_changeDetectorRef,_elementRef,_focusMonitor,defaultTabIndex,defaultOptions){super(),this._changeDetectorRef=_changeDetectorRef,this._elementRef=_elementRef,this._focusMonitor=_focusMonitor,this._checked=!1,this.ariaLabelledby=null,this._disabled=!1,this.change=new core.EventEmitter;const parsedTabIndex=Number(defaultTabIndex);this.tabIndex=parsedTabIndex||0===parsedTabIndex?parsedTabIndex:null,this.buttonToggleGroup=toggleGroup,this.appearance=defaultOptions&&defaultOptions.appearance?defaultOptions.appearance:"standard"}ngOnInit(){const group=this.buttonToggleGroup;this.id=this.id||"mat-button-toggle-"+uniqueIdCounter++,group&&(group._isPrechecked(this)?this.checked=!0:group._isSelected(this)!==this._checked&&group._syncButtonToggle(this,this._checked))}ngAfterViewInit(){this._focusMonitor.monitor(this._elementRef,!0)}ngOnDestroy(){const group=this.buttonToggleGroup;this._focusMonitor.stopMonitoring(this._elementRef),group&&group._isSelected(this)&&group._syncButtonToggle(this,!1,!1,!0)}focus(options){this._buttonElement.nativeElement.focus(options)}_onButtonClick(){const newChecked=!!this._isSingleSelector()||!this._checked;newChecked!==this._checked&&(this._checked=newChecked,this.buttonToggleGroup&&(this.buttonToggleGroup._syncButtonToggle(this,this._checked,!0),this.buttonToggleGroup._onTouched())),this.change.emit(new MatButtonToggleChange(this,this.value))}_markForCheck(){this._changeDetectorRef.markForCheck()}_getButtonName(){return this._isSingleSelector()?this.buttonToggleGroup.name:this.name||null}_isSingleSelector(){return this.buttonToggleGroup&&!this.buttonToggleGroup.multiple}}MatButtonToggle.ɵfac=function MatButtonToggle_Factory(t){return new(t||MatButtonToggle)(core["ɵɵdirectiveInject"](MAT_BUTTON_TOGGLE_GROUP,8),core["ɵɵdirectiveInject"](core.ChangeDetectorRef),core["ɵɵdirectiveInject"](core.ElementRef),core["ɵɵdirectiveInject"](a11y.tE),core["ɵɵinjectAttribute"]("tabindex"),core["ɵɵdirectiveInject"](MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS,8))},MatButtonToggle.ɵcmp=core["ɵɵdefineComponent"]({type:MatButtonToggle,selectors:[["mat-button-toggle"]],viewQuery:function MatButtonToggle_Query(rf,ctx){if(1&rf&&core["ɵɵviewQuery"](_c0,5),2&rf){let _t;core["ɵɵqueryRefresh"](_t=core["ɵɵloadQuery"]())&&(ctx._buttonElement=_t.first)}},hostAttrs:["role","presentation",1,"mat-button-toggle"],hostVars:12,hostBindings:function MatButtonToggle_HostBindings(rf,ctx){1&rf&&core["ɵɵlistener"]("focus",(function MatButtonToggle_focus_HostBindingHandler(){return ctx.focus()})),2&rf&&(core["ɵɵattribute"]("aria-label",null)("aria-labelledby",null)("id",ctx.id)("name",null),core["ɵɵclassProp"]("mat-button-toggle-standalone",!ctx.buttonToggleGroup)("mat-button-toggle-checked",ctx.checked)("mat-button-toggle-disabled",ctx.disabled)("mat-button-toggle-appearance-standard","standard"===ctx.appearance))},inputs:{disableRipple:"disableRipple",ariaLabel:["aria-label","ariaLabel"],ariaLabelledby:["aria-labelledby","ariaLabelledby"],id:"id",name:"name",value:"value",tabIndex:"tabIndex",appearance:"appearance",checked:"checked",disabled:"disabled"},outputs:{change:"change"},exportAs:["matButtonToggle"],features:[core["ɵɵInheritDefinitionFeature"]],ngContentSelectors:["*"],decls:6,vars:9,consts:[["type","button",1,"mat-button-toggle-button","mat-focus-indicator",3,"id","disabled","click"],["button",""],[1,"mat-button-toggle-label-content"],[1,"mat-button-toggle-focus-overlay"],["matRipple","",1,"mat-button-toggle-ripple",3,"matRippleTrigger","matRippleDisabled"]],template:function MatButtonToggle_Template(rf,ctx){if(1&rf&&(core["ɵɵprojectionDef"](),core["ɵɵelementStart"](0,"button",0,1),core["ɵɵlistener"]("click",(function MatButtonToggle_Template_button_click_0_listener(){return ctx._onButtonClick()})),core["ɵɵelementStart"](2,"span",2),core["ɵɵprojection"](3),core["ɵɵelementEnd"]()(),core["ɵɵelement"](4,"span",3)(5,"span",4)),2&rf){const _r0=core["ɵɵreference"](1);core["ɵɵproperty"]("id",ctx.buttonId)("disabled",ctx.disabled||null),core["ɵɵattribute"]("tabindex",ctx.disabled?-1:ctx.tabIndex)("aria-pressed",ctx.checked)("name",ctx._getButtonName())("aria-label",ctx.ariaLabel)("aria-labelledby",ctx.ariaLabelledby),core["ɵɵadvance"](5),core["ɵɵproperty"]("matRippleTrigger",_r0)("matRippleDisabled",ctx.disableRipple||ctx.disabled)}},dependencies:[fesm2020_core.wG],styles:[".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}"],encapsulation:2,changeDetection:0}),("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatButtonToggle,[{type:core.Component,args:[{selector:"mat-button-toggle",encapsulation:core.ViewEncapsulation.None,exportAs:"matButtonToggle",changeDetection:core.ChangeDetectionStrategy.OnPush,inputs:["disableRipple"],host:{"[class.mat-button-toggle-standalone]":"!buttonToggleGroup","[class.mat-button-toggle-checked]":"checked","[class.mat-button-toggle-disabled]":"disabled","[class.mat-button-toggle-appearance-standard]":'appearance === "standard"',class:"mat-button-toggle","[attr.aria-label]":"null","[attr.aria-labelledby]":"null","[attr.id]":"id","[attr.name]":"null","(focus)":"focus()",role:"presentation"},template:'<button #button class="mat-button-toggle-button mat-focus-indicator"\n        type="button"\n        [id]="buttonId"\n        [attr.tabindex]="disabled ? -1 : tabIndex"\n        [attr.aria-pressed]="checked"\n        [disabled]="disabled || null"\n        [attr.name]="_getButtonName()"\n        [attr.aria-label]="ariaLabel"\n        [attr.aria-labelledby]="ariaLabelledby"\n        (click)="_onButtonClick()">\n  <span class="mat-button-toggle-label-content">\n    <ng-content></ng-content>\n  </span>\n</button>\n\n<span class="mat-button-toggle-focus-overlay"></span>\n<span class="mat-button-toggle-ripple" matRipple\n     [matRippleTrigger]="button"\n     [matRippleDisabled]="this.disableRipple || this.disabled">\n</span>\n',styles:[".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}"]}]}],(function(){return[{type:MatButtonToggleGroup,decorators:[{type:core.Optional},{type:core.Inject,args:[MAT_BUTTON_TOGGLE_GROUP]}]},{type:core.ChangeDetectorRef},{type:core.ElementRef},{type:a11y.tE},{type:void 0,decorators:[{type:core.Attribute,args:["tabindex"]}]},{type:void 0,decorators:[{type:core.Optional},{type:core.Inject,args:[MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]}]}]}),{ariaLabel:[{type:core.Input,args:["aria-label"]}],ariaLabelledby:[{type:core.Input,args:["aria-labelledby"]}],_buttonElement:[{type:core.ViewChild,args:["button"]}],id:[{type:core.Input}],name:[{type:core.Input}],value:[{type:core.Input}],tabIndex:[{type:core.Input}],appearance:[{type:core.Input}],checked:[{type:core.Input}],disabled:[{type:core.Input}],change:[{type:core.Output}]});class MatButtonToggleModule{}MatButtonToggleModule.ɵfac=function MatButtonToggleModule_Factory(t){return new(t||MatButtonToggleModule)},MatButtonToggleModule.ɵmod=core["ɵɵdefineNgModule"]({type:MatButtonToggleModule,declarations:[MatButtonToggleGroup,MatButtonToggle],imports:[fesm2020_core.BQ,fesm2020_core.si],exports:[fesm2020_core.BQ,MatButtonToggleGroup,MatButtonToggle]}),MatButtonToggleModule.ɵinj=core["ɵɵdefineInjector"]({imports:[fesm2020_core.BQ,fesm2020_core.si,fesm2020_core.BQ]}),("undefined"==typeof ngDevMode||ngDevMode)&&core["ɵsetClassMetadata"](MatButtonToggleModule,[{type:core.NgModule,args:[{imports:[fesm2020_core.BQ,fesm2020_core.si],exports:[fesm2020_core.BQ,MatButtonToggleGroup,MatButtonToggle],declarations:[MatButtonToggleGroup,MatButtonToggle]}]}],null,null);var _class,icon=__webpack_require__("./node_modules/@angular/material/fesm2020/icon.mjs"),input=__webpack_require__("./node_modules/@angular/material/fesm2020/input.mjs");let OccupationsSearchAreaComponent=((_class=class OccupationsSearchAreaComponent{constructor(){this.filters={searchTerm:"",showOccupations:"0",preparednessLevel:"0"},this.filtersChanged=new core.EventEmitter}filtersChange(field,event){this.filters[field]=event.value,this.filtersChanged.emit(this.filters)}inputChange(event){this.filters.searchTerm=event.target.value,this.filtersChanged.emit(this.filters)}}).propDecorators={filters:[{type:core.Input}],filtersChanged:[{type:core.Output}]},_class);OccupationsSearchAreaComponent=(0,tslib_es6.gn)([(0,core.Component)({selector:"trust-ai-occupations-search-area",standalone:!0,imports:[common.CommonModule,input.c,icon.Ps,MatButtonToggleModule,fesm2020_button.ot,fesm2020_forms.UX],template:'<div class="row">\n  <div class="search-box">\n    Find in list\n    <mat-form-field class="form" appearance="fill" subscriptSizing="dynamic">\n      <input class="search-input" matInput (input)="inputChange($event)" placeholder="Job title, keywords" />\n      <mat-icon class="material-icons">search</mat-icon>\n    </mat-form-field>\n  </div>\n  <button class="preparedness-button" mat-stroked-button color="primary">\n    <div class="label">\n      <img class="info-icon" src="assets/icons/info.png" />\n      <div>Preparedness Levels</div>\n    </div>\n  </button>\n</div>\n<div class="row">\n  <div class="occupations-toggle">\n    Show Occupations\n    <mat-button-toggle-group\n      name="show-occupations-toggle"\n      aria-label="Show Occupations"\n      (change)="filtersChange(\'showOccupations\', $event)"\n    >\n      <mat-button-toggle value="0" checked="true">\n        <mat-icon class="checkmark" *ngIf="filters[\'showOccupations\'] === \'0\'">check</mat-icon>\n        All\n      </mat-button-toggle>\n      <mat-button-toggle value="1">\n        <mat-icon class="checkmark" *ngIf="filters[\'showOccupations\'] === \'1\'">check</mat-icon>\n        Data-level\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n  <div class="preparedness-toggle">\n    Preparedness Level\n    <mat-button-toggle-group\n      name="preparedness-toggle"\n      aria-label="Preparedness Level"\n      (change)="filtersChange(\'preparednessLevel\', $event)"\n    >\n      <mat-button-toggle\n        *ngFor="let item of [\'0\', \'1\', \'2\', \'3\', \'4\', \'5\']"\n        value="{{ item }}"\n        checked="{{ item === \'0\' }}"\n      >\n        <mat-icon class="checkmark" *ngIf="filters[\'preparednessLevel\'] === item">check</mat-icon>\n        {{ item === \'0\' ? \'All\' : item }}\n      </mat-button-toggle>\n    </mat-button-toggle-group>\n  </div>\n</div>\n',styles:[occupations_search_area_componentngResource_default()]})],OccupationsSearchAreaComponent);const occupations_search_area_component_stories={title:"OccupationsSearchAreaComponent",component:OccupationsSearchAreaComponent},Primary=(args=>({props:args})).bind({});Primary.args={}},"./src/app/occupations-search-area/occupations-search-area.component.scss?ngResource":(module,__unused_webpack_exports,__webpack_require__)=>{var ___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/noSourceMaps.js"),___CSS_LOADER_EXPORT___=__webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(___CSS_LOADER_API_NO_SOURCEMAP_IMPORT___);___CSS_LOADER_EXPORT___.push([module.id,":host .row {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  margin: 1rem 0;\n}\n:host .search-box {\n  display: flex;\n  flex-direction: column;\n}\n:host .search-box,\n:host .occupations-toggle {\n  width: 22.25rem;\n}\n:host .preparedness-toggle {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n:host .preparedness-button {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  height: 2.5rem;\n  border: 1px solid #7a757f;\n  border-radius: 6.25rem;\n}\n:host .preparedness-button .label {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  color: #6750a4;\n  padding: 0.625rem 1.5rem 0.625rem 1rem;\n}\n:host .preparedness-button .label .info-icon {\n  height: 1.125rem;\n}\n:host .search-box,\n:host .occupations-toggle,\n:host .preparedness-toggle {\n  font-weight: 500;\n  font-size: 0.875rem;\n  color: #22005d;\n}\n:host .occupations-toggle mat-button-toggle,\n:host .preparedness-toggle mat-button-toggle {\n  border-right: 1px solid #7a757f;\n  border-top: 1px solid #7a757f;\n  border-bottom: 1px solid #7a757f;\n}\n:host .occupations-toggle mat-button-toggle ::ng-deep .mat-button-toggle-label-content,\n:host .preparedness-toggle mat-button-toggle ::ng-deep .mat-button-toggle-label-content {\n  padding: 0;\n}\n:host .occupations-toggle mat-button-toggle .checkmark,\n:host .preparedness-toggle mat-button-toggle .checkmark {\n  height: 1.125rem;\n  width: 1.125rem;\n  line-height: 1.125rem;\n  padding-right: 0.5rem;\n}\n:host .occupations-toggle .mat-button-toggle-checked,\n:host .preparedness-toggle .mat-button-toggle-checked {\n  background: #e8def8;\n}\n:host .occupations-toggle .mat-button-toggle:first-of-type,\n:host .preparedness-toggle .mat-button-toggle:first-of-type {\n  border-left: 1px solid #7a757f;\n  border-radius: 6.25rem 0 0 6.25rem;\n}\n:host .occupations-toggle .mat-button-toggle:first-of-type ::ng-deep .mat-ripple,\n:host .preparedness-toggle .mat-button-toggle:first-of-type ::ng-deep .mat-ripple {\n  border-radius: 6.25rem 0 0 6.25rem;\n}\n:host .occupations-toggle .mat-button-toggle:last-of-type,\n:host .preparedness-toggle .mat-button-toggle:last-of-type {\n  border-radius: 0 6.25rem 6.25rem 0;\n}\n:host .occupations-toggle .mat-button-toggle:last-of-type ::ng-deep .mat-ripple,\n:host .preparedness-toggle .mat-button-toggle:last-of-type ::ng-deep .mat-ripple {\n  border-radius: 0 6.25rem 6.25rem 0;\n}\n:host .occupations-toggle {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  gap: 0.5rem;\n}\n:host .occupations-toggle mat-button-toggle {\n  width: 112.5px;\n}\n:host .preparedness-toggle mat-button-toggle {\n  width: 4rem;\n}\n:host mat-form-field {\n  padding-top: 0.5rem;\n}\n:host ::ng-deep .mat-mdc-text-field-wrapper {\n  background: #ece6f0;\n  border-radius: 1.75rem;\n}\n:host ::ng-deep .mat-mdc-form-field-infix {\n  display: inline-flex;\n}\n:host ::ng-deep .mdc-line-ripple {\n  display: none;\n}\n:host ::ng-deep .mat-button-toggle-group {\n  border: none;\n}",""]),module.exports=___CSS_LOADER_EXPORT___.toString()}}]);